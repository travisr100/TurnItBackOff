Enter file contents here/**
*  Turn It Back Off
*
*  Copyright 2015 Travis Reese
*
*  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
*  in compliance with the License. You may obtain a copy of the License at:
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
*  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
*  for the specific language governing permissions and limitations under the License.
*
*/
definition(
    name: "Turn It Back Off",
    namespace: "travisr100",
    author: "Travis Reese",
    description: "After a switch is turned on turn it back off after a certain amount of time.",
    category: "Convenience",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png",
    iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png")

/*
This one allows multiple switches to be selected but will turn back off only the single switch that was turned on.
*/

preferences {
    section("Turn back off these switches...") {
      input "switches", "capability.switch", multiple: true
    }
    section("After this number of seconds..."){
      input "delaySeconds", "number", title: "Seconds?"
    }
}

def installed() {
  log.debug "Installed with settings: ${settings}"
  initialize()
}

def updated() {
  log.debug "Updated with settings: ${settings}"
  unsubscribe()
  unschedule()
  initialize()
}

def initialize() {
  subscribe(switches, "switch.on", onHandler)
  subscribe(switches, "level", dimHandler) 
}

def onHandler(evt) {
  log.debug "onHandler $evt"
  //runIn(delaySeconds, turnItOff())
  //runIn(60, turnItOff)
  def singleswitch = getSwitch(evt)
  runIn(delaySeconds, singleswitch.off())
}

def dimHandler(evt) {
  log.debug "dimHandler $evt"
  runIn(delaySeconds, turnItOff())
}

def turnItOff() {
  log.debug "turnItOff reached"
  switches?.off()
}

private getSwitch(evt) {
  //Get a handle to the individual switch
  switches.find{it.id == evt.deviceId}
}
